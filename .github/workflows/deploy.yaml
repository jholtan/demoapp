name: Build and Deploy

on:
  push:
    branches:
      - master
  workflow_dispatch:
  repository_dispatch:
    types: [argocd-sync-succeeded]

permissions:
  id-token: write
  packages: write
  attestations: write

env:
  REGISTRY: ghcr.io

jobs:
  build-source:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          persist-credentials: false
      - name: Authenticate to private Docker registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup Docker build
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804
        with:
          images: ghcr.io/jholtan/demoapp
      - name: Build and push image
        uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4
        id: build_image
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Generate attestation
        uses: actions/attest-build-provenance@v2.2.2
        with:
          subject-name: ghcr.io/jholtan/demoapp
          subject-digest: ${{ steps.build_image.outputs.digest }}
          push-to-registry: true

  deploy-stage:
    needs: build-source
    runs-on: ubuntu-latest
    environment: stage
    steps:
      - name: Deploy to stage
        run: echo "Deploying to Stage"
      - name: Update GitOps repository
        run: echo "Producing a new commit in GitOps repository"

  wait-for-stage:
    needs: deploy-stage
    runs-on: ubuntu-latest
    steps:
      - name: Wait for ArgoCD sync
        run: echo "Waiting for ArgoCD to be synced and healthy"
    timeout-minutes: 15

  deploy-prod:
    needs: wait-for-stage
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Deploy to production
        run: echo "Deploying to Production"
      - name: Update GitOps repository
        run: echo "Producing a new commit in GitOps repository"

  wait-for-prod:
    needs: deploy-prod
    runs-on: ubuntu-latest
    steps:
      - name: Wait for ArgoCD sync
        run: echo "Waiting for ArgoCD to be synced and healthy"
    timeout-minutes: 15
